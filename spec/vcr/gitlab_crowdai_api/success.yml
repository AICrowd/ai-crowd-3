---
http_interactions:
- request:
    method: get
    uri: https://gitlab.crowdai.org/crowdai-dojo/Selecting-data-in-pandas/raw/master/index.ipynb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Fri, 10 Jan 2020 13:19:10 GMT
      Content-Type:
      - text/plain; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Vary:
      - Accept-Encoding
      Cache-Control:
      - max-age=60, public
      Content-Disposition:
      - inline
      Etag:
      - W/"79016c7f114d7a04d1143867d47665ad"
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - DENY
      X-Request-Id:
      - 55a30c08-8779-4248-8054-5f04d4110d90
      X-Runtime:
      - '0.060608'
      X-Ua-Compatible:
      - IE=edge
      X-Xss-Protection:
      - 1; mode=block
      Strict-Transport-Security:
      - max-age=31536000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        {
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Selecting data from a pandas DataFrame\n",
    "\n",
    "A fundamental task when working with a DataFrame is selecting data from it. One thing that you will notice straight away is that there **many** different ways in which this can be done. At first, this might seem quite confusing and redundant. But with more practice, you will come to appreciate the flexibility provided by having all these different ways, and you will learn to choose the most appropriate method for your particular needs.\n",
    "\n",
    "Before we begin, let's review the main components of a DataFrame."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### The components of a DataFrame\n",
    "<img src=\"picture.png\" width=\"900\">\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Essentially a DataFrame is composed of the following three elements:\n",
    "\n",
    "* the **index labels** (these are the bold numbers from 0 to 9 on the left hand side of the table)\n",
    "* the **column names** (these are the bold names on the top of the table)\n",
    "* the **data** itself (this is everything else inside the actual cells of the table)\n",
    "\n",
    "Let's set up the DataFrame from the image above so that we can look at it further."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Mountain</th>\n",
       "      <th>Height (m)</th>\n",
       "      <th>Range</th>\n",
       "      <th>Coordinates</th>\n",
       "      <th>Parent mountain</th>\n",
       "      <th>First ascent</th>\n",
       "      <th>Ascents bef. 2004</th>\n",
       "      <th>Failed attempts bef. 2004</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Mount Everest / Sagarmatha / Chomolungma</td>\n",
       "      <td>8848</td>\n",
       "      <td>Mahalangur Himalaya</td>\n",
       "      <td>27°59′17″N 86°55′31″E﻿</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1953</td>\n",
       "      <td>&gt;&gt;145</td>\n",
       "      <td>121.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>K2 / Qogir / Godwin Austen</td>\n",
       "      <td>8611</td>\n",
       "      <td>Baltoro Karakoram</td>\n",
       "      <td>35°52′53″N 76°30′48″E﻿</td>\n",
       "      <td>Mount Everest</td>\n",
       "      <td>1954</td>\n",
       "      <td>45</td>\n",
       "      <td>44.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Kangchenjunga</td>\n",
       "      <td>8586</td>\n",
       "      <td>Kangchenjunga Himalaya</td>\n",
       "      <td>27°42′12″N 88°08′51″E﻿</td>\n",
       "      <td>Mount Everest</td>\n",
       "      <td>1955</td>\n",
       "      <td>38</td>\n",
       "      <td>24.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Lhotse</td>\n",
       "      <td>8516</td>\n",
       "      <td>Mahalangur Himalaya</td>\n",
       "      <td>27°57′42″N 86°55′59″E﻿</td>\n",
       "      <td>Mount Everest</td>\n",
       "      <td>1956</td>\n",
       "      <td>26</td>\n",
       "      <td>26.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Makalu</td>\n",
       "      <td>8485</td>\n",
       "      <td>Mahalangur Himalaya</td>\n",
       "      <td>27°53′23″N 87°05′20″E﻿</td>\n",
       "      <td>Mount Everest</td>\n",
       "      <td>1955</td>\n",
       "      <td>45</td>\n",
       "      <td>52.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Cho Oyu</td>\n",
       "      <td>8188</td>\n",
       "      <td>Mahalangur Himalaya</td>\n",
       "      <td>28°05′39″N 86°39′39″E﻿</td>\n",
       "      <td>Mount Everest</td>\n",
       "      <td>1954</td>\n",
       "      <td>79</td>\n",
       "      <td>28.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Dhaulagiri I</td>\n",
       "      <td>8167</td>\n",
       "      <td>Dhaulagiri Himalaya</td>\n",
       "      <td>28°41′48″N 83°29′35″E﻿</td>\n",
       "      <td>K2</td>\n",
       "      <td>1960</td>\n",
       "      <td>51</td>\n",
       "      <td>39.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Manaslu</td>\n",
       "      <td>8163</td>\n",
       "      <td>Manaslu Himalaya</td>\n",
       "      <td>28°33′00″N 84°33′35″E﻿</td>\n",
       "      <td>Cho Oyu</td>\n",
       "      <td>1956</td>\n",
       "      <td>49</td>\n",
       "      <td>45.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Nanga Parbat</td>\n",
       "      <td>8126</td>\n",
       "      <td>Nanga Parbat Himalaya</td>\n",
       "      <td>35°14′14″N 74°35′21″E﻿</td>\n",
       "      <td>Dhaulagiri</td>\n",
       "      <td>1953</td>\n",
       "      <td>52</td>\n",
       "      <td>67.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Annapurna I</td>\n",
       "      <td>8091</td>\n",
       "      <td>Annapurna Himalaya</td>\n",
       "      <td>28°35′44″N 83°49′13″E﻿</td>\n",
       "      <td>Cho Oyu</td>\n",
       "      <td>1950</td>\n",
       "      <td>36</td>\n",
       "      <td>47.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                   Mountain  Height (m)  \\\n",
       "0  Mount Everest / Sagarmatha / Chomolungma        8848   \n",
       "1                K2 / Qogir / Godwin Austen        8611   \n",
       "2                             Kangchenjunga        8586   \n",
       "3                                    Lhotse        8516   \n",
       "4                                    Makalu        8485   \n",
       "5                                   Cho Oyu        8188   \n",
       "6                              Dhaulagiri I        8167   \n",
       "7                                   Manaslu        8163   \n",
       "8                              Nanga Parbat        8126   \n",
       "9                               Annapurna I        8091   \n",
       "\n",
       "                    Range              Coordinates Parent mountain  \\\n",
       "0     Mahalangur Himalaya  27°59′17″N 86°55′31″E﻿              NaN   \n",
       "1       Baltoro Karakoram  35°52′53″N 76°30′48″E﻿    Mount Everest   \n",
       "2  Kangchenjunga Himalaya  27°42′12″N 88°08′51″E﻿    Mount Everest   \n",
       "3     Mahalangur Himalaya  27°57′42″N 86°55′59″E﻿    Mount Everest   \n",
       "4     Mahalangur Himalaya  27°53′23″N 87°05′20″E﻿    Mount Everest   \n",
       "5     Mahalangur Himalaya  28°05′39″N 86°39′39″E﻿    Mount Everest   \n",
       "6     Dhaulagiri Himalaya  28°41′48″N 83°29′35″E﻿               K2   \n",
       "7        Manaslu Himalaya  28°33′00″N 84°33′35″E﻿          Cho Oyu   \n",
       "8   Nanga Parbat Himalaya  35°14′14″N 74°35′21″E﻿       Dhaulagiri   \n",
       "9      Annapurna Himalaya  28°35′44″N 83°49′13″E﻿          Cho Oyu   \n",
       "\n",
       "   First ascent Ascents bef. 2004  Failed attempts bef. 2004  \n",
       "0          1953            >>145                       121.0  \n",
       "1          1954                45                       44.0  \n",
       "2          1955                38                       24.0  \n",
       "3          1956                26                       26.0  \n",
       "4          1955                45                       52.0  \n",
       "5          1954                79                       28.0  \n",
       "6          1960                51                       39.0  \n",
       "7          1956                49                       45.0  \n",
       "8          1953                52                       67.0  \n",
       "9          1950                36                       47.0  "
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.read_csv('data.csv', index_col=0)\n",
    "df"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The default indexing in pandas is always a numbering starting at `0` but we can change this to anything that we want, even non-numerical values. For the purposes of our exercise let's change the row index to be non-numerical, for example the column `Mountain` giving the names of the mountains."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Height (m)</th>\n",
       "      <th>Range</th>\n",
       "      <th>Coordinates</th>\n",
       "      <th>Parent mountain</th>\n",
       "      <th>First ascent</th>\n",
       "      <th>Ascents bef. 2004</th>\n",
       "      <th>Failed attempts bef. 2004</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mountain</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Mount Everest / Sagarmatha / Chomolungma</th>\n",
       "      <td>8848</td>\n",
       "      <td>Mahalangur Himalaya</td>\n",
       "      <td>27°59′17″N 86°55′31″E﻿</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1953</td>\n",
       "      <td>&gt;&gt;145</td>\n",
       "      <td>121.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>K2 / Qogir / Godwin Austen</th>\n",
       "      <td>8611</td>\n",
       "      <td>Baltoro Karakoram</td>\n",
       "      <td>35°52′53″N 76°30′48″E﻿</td>\n",
       "      <td>Mount Everest</td>\n",
       "      <td>1954</td>\n",
       "      <td>45</td>\n",
       "      <td>44.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Kangchenjunga</th>\n",
       "      <td>8586</td>\n",
       "      <td>Kangchenjunga Himalaya</td>\n",
       "      <td>27°42′12″N 88°08′51″E﻿</td>\n",
       "      <td>Mount Everest</td>\n",
       "      <td>1955</td>\n",
       "      <td>38</td>\n",
       "      <td>24.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Lhotse</th>\n",
       "      <td>8516</td>\n",
       "      <td>Mahalangur Himalaya</td>\n",
       "      <td>27°57′42″N 86°55′59″E﻿</td>\n",
       "      <td>Mount Everest</td>\n",
       "      <td>1956</td>\n",
       "      <td>26</td>\n",
       "      <td>26.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Makalu</th>\n",
       "      <td>8485</td>\n",
       "      <td>Mahalangur Himalaya</td>\n",
       "      <td>27°53′23″N 87°05′20″E﻿</td>\n",
       "      <td>Mount Everest</td>\n",
       "      <td>1955</td>\n",
       "      <td>45</td>\n",
       "      <td>52.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Cho Oyu</th>\n",
       "      <td>8188</td>\n",
       "      <td>Mahalangur Himalaya</td>\n",
       "      <td>28°05′39″N 86°39′39″E﻿</td>\n",
       "      <td>Mount Everest</td>\n",
       "      <td>1954</td>\n",
       "      <td>79</td>\n",
       "      <td>28.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Dhaulagiri I</th>\n",
       "      <td>8167</td>\n",
       "      <td>Dhaulagiri Himalaya</td>\n",
       "      <td>28°41′48″N 83°29′35″E﻿</td>\n",
       "      <td>K2</td>\n",
       "      <td>1960</td>\n",
       "      <td>51</td>\n",
       "      <td>39.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Manaslu</th>\n",
       "      <td>8163</td>\n",
       "      <td>Manaslu Himalaya</td>\n",
       "      <td>28°33′00″N 84°33′35″E﻿</td>\n",
       "      <td>Cho Oyu</td>\n",
       "      <td>1956</td>\n",
       "      <td>49</td>\n",
       "      <td>45.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Nanga Parbat</th>\n",
       "      <td>8126</td>\n",
       "      <td>Nanga Parbat Himalaya</td>\n",
       "      <td>35°14′14″N 74°35′21″E﻿</td>\n",
       "      <td>Dhaulagiri</td>\n",
       "      <td>1953</td>\n",
       "      <td>52</td>\n",
       "      <td>67.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Annapurna I</th>\n",
       "      <td>8091</td>\n",
       "      <td>Annapurna Himalaya</td>\n",
       "      <td>28°35′44″N 83°49′13″E﻿</td>\n",
       "      <td>Cho Oyu</td>\n",
       "      <td>1950</td>\n",
       "      <td>36</td>\n",
       "      <td>47.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                          Height (m)                   Range  \\\n",
       "Mountain                                                                       \n",
       "Mount Everest / Sagarmatha / Chomolungma        8848     Mahalangur Himalaya   \n",
       "K2 / Qogir / Godwin Austen                      8611       Baltoro Karakoram   \n",
       "Kangchenjunga                                   8586  Kangchenjunga Himalaya   \n",
       "Lhotse                                          8516     Mahalangur Himalaya   \n",
       "Makalu                                          8485     Mahalangur Himalaya   \n",
       "Cho Oyu                                         8188     Mahalangur Himalaya   \n",
       "Dhaulagiri I                                    8167     Dhaulagiri Himalaya   \n",
       "Manaslu                                         8163        Manaslu Himalaya   \n",
       "Nanga Parbat                                    8126   Nanga Parbat Himalaya   \n",
       "Annapurna I                                     8091      Annapurna Himalaya   \n",
       "\n",
       "                                                      Coordinates  \\\n",
       "Mountain                                                            \n",
       "Mount Everest / Sagarmatha / Chomolungma  27°59′17″N 86°55′31″E﻿    \n",
       "K2 / Qogir / Godwin Austen                35°52′53″N 76°30′48″E﻿    \n",
       "Kangchenjunga                             27°42′12″N 88°08′51″E﻿    \n",
       "Lhotse                                    27°57′42″N 86°55′59″E﻿    \n",
       "Makalu                                    27°53′23″N 87°05′20″E﻿    \n",
       "Cho Oyu                                   28°05′39″N 86°39′39″E﻿    \n",
       "Dhaulagiri I                              28°41′48″N 83°29′35″E﻿    \n",
       "Manaslu                                   28°33′00″N 84°33′35″E﻿    \n",
       "Nanga Parbat                              35°14′14″N 74°35′21″E﻿    \n",
       "Annapurna I                               28°35′44″N 83°49′13″E﻿    \n",
       "\n",
       "                                         Parent mountain  First ascent  \\\n",
       "Mountain                                                                 \n",
       "Mount Everest / Sagarmatha / Chomolungma             NaN          1953   \n",
       "K2 / Qogir / Godwin Austen                 Mount Everest          1954   \n",
       "Kangchenjunga                              Mount Everest          1955   \n",
       "Lhotse                                     Mount Everest          1956   \n",
       "Makalu                                     Mount Everest          1955   \n",
       "Cho Oyu                                    Mount Everest          1954   \n",
       "Dhaulagiri I                                          K2          1960   \n",
       "Manaslu                                          Cho Oyu          1956   \n",
       "Nanga Parbat                                  Dhaulagiri          1953   \n",
       "Annapurna I                                      Cho Oyu          1950   \n",
       "\n",
       "                                         Ascents bef. 2004  \\\n",
       "Mountain                                                     \n",
       "Mount Everest / Sagarmatha / Chomolungma            >>145    \n",
       "K2 / Qogir / Godwin Austen                              45   \n",
       "Kangchenjunga                                           38   \n",
       "Lhotse                                                  26   \n",
       "Makalu                                                  45   \n",
       "Cho Oyu                                                 79   \n",
       "Dhaulagiri I                                            51   \n",
       "Manaslu                                                 49   \n",
       "Nanga Parbat                                            52   \n",
       "Annapurna I                                             36   \n",
       "\n",
       "                                          Failed attempts bef. 2004  \n",
       "Mountain                                                             \n",
       "Mount Everest / Sagarmatha / Chomolungma                      121.0  \n",
       "K2 / Qogir / Godwin Austen                                     44.0  \n",
       "Kangchenjunga                                                  24.0  \n",
       "Lhotse                                                         26.0  \n",
       "Makalu                                                         52.0  \n",
       "Cho Oyu                                                        28.0  \n",
       "Dhaulagiri I                                                   39.0  \n",
       "Manaslu                                                        45.0  \n",
       "Nanga Parbat                                                   67.0  \n",
       "Annapurna I                                                    47.0  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.set_index('Mountain', inplace=True)\n",
    "df"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can now see that the numerical  indexing from 0 has been replaced by the column giving the mountain names. Given a DataFrame we can always check its index labels and column names using the attributes `index` and `columns` respectively."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Mount Everest / Sagarmatha / Chomolungma',\n",
       "       'K2 / Qogir / Godwin Austen', 'Kangchenjunga', 'Lhotse', 'Makalu',\n",
       "       'Cho Oyu', 'Dhaulagiri I', 'Manaslu', 'Nanga Parbat', 'Annapurna I'],\n",
       "      dtype='object', name='Mountain')"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.index"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Height (m)', 'Range', 'Coordinates', 'Parent mountain', 'First ascent',\n",
       "       'Ascents bef. 2004', 'Failed attempts bef. 2004'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.columns"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In addition to the index labels and column names we can also refer to rows and columns in the DataFrame using their position. The positioning of rows and columns starts at `0`. In our example we have 10 rows which are from position `0` to position `9` and `7` columns which are from position `0` to position `6`. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now that we understand the structure of a DataFrame, we can go on with the main topic: selecting data."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# The attribute operator `.` to select columns\n",
    "\n",
    "\n",
    "The attribute operator allows us to select a single column at a time. This is because in the implementation of the DataFrame object the columns are automatically declared as attributes. Let's look at an example"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Mountain\n",
       "Mount Everest / Sagarmatha / Chomolungma       Mahalangur Himalaya\n",
       "K2 / Qogir / Godwin Austen                       Baltoro Karakoram\n",
       "Kangchenjunga                               Kangchenjunga Himalaya\n",
       "Lhotse                                         Mahalangur Himalaya\n",
       "Makalu                                         Mahalangur Himalaya\n",
       "Cho Oyu                                        Mahalangur Himalaya\n",
       "Dhaulagiri I                                   Dhaulagiri Himalaya\n",
       "Manaslu                                           Manaslu Himalaya\n",
       "Nanga Parbat                                 Nanga Parbat Himalaya\n",
       "Annapurna I                                     Annapurna Himalaya\n",
       "Name: Range, dtype: object"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.Range"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This returns a Series object whose index is the same as of the original DataFrame and whose entries correspond to the column which we selected. \n",
    "\n",
    "Now if we tried to use the attribute operator with the column `'Height (m)'` we will obtain an error since Python's language syntax cannot allow for certain characters such as white spaces direct attribute reference. We can get around this using the `getattr` function as follows"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Mountain\n",
       "Mount Everest / Sagarmatha / Chomolungma    8848\n",
       "K2 / Qogir / Godwin Austen                  8611\n",
       "Kangchenjunga                               8586\n",
       "Lhotse                                      8516\n",
       "Makalu                                      8485\n",
       "Cho Oyu                                     8188\n",
       "Dhaulagiri I                                8167\n",
       "Manaslu                                     8163\n",
       "Nanga Parbat                                8126\n",
       "Annapurna I                                 8091\n",
       "Name: Height (m), dtype: int64"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "getattr(df, 'Height (m)')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "But in general, the attribute operator is restricted to those columns whose names can be accessed via direct attribute reference. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# The index operator `[ ]` to select columns\n",
    "\n",
    "\n",
    "Another way that we can select a specific column is by passing its name to the index operator. Note that the name has to be passed inside quotation marks."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Mountain\n",
       "Mount Everest / Sagarmatha / Chomolungma    8848\n",
       "K2 / Qogir / Godwin Austen                  8611\n",
       "Kangchenjunga                               8586\n",
       "Lhotse                                      8516\n",
       "Makalu                                      8485\n",
       "Cho Oyu                                     8188\n",
       "Dhaulagiri I                                8167\n",
       "Manaslu                                     8163\n",
       "Nanga Parbat                                8126\n",
       "Annapurna I                                 8091\n",
       "Name: Height (m), dtype: int64"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Height (m)']"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The index operator also allows us to select multiple columns at a time. We can do this by passing a list containing all the column names that we want to select."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Height (m)</th>\n",
       "      <th>Range</th>\n",
       "      <th>Coordinates</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mountain</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Mount Everest / Sagarmatha / Chomolungma</th>\n",
       "      <td>8848</td>\n",
       "      <td>Mahalangur Himalaya</td>\n",
       "      <td>27°59′17″N 86°55′31″E﻿</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>K2 / Qogir / Godwin Austen</th>\n",
       "      <td>8611</td>\n",
       "      <td>Baltoro Karakoram</td>\n",
       "      <td>35°52′53″N 76°30′48″E﻿</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Kangchenjunga</th>\n",
       "      <td>8586</td>\n",
       "      <td>Kangchenjunga Himalaya</td>\n",
       "      <td>27°42′12″N 88°08′51″E﻿</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Lhotse</th>\n",
       "      <td>8516</td>\n",
       "      <td>Mahalangur Himalaya</td>\n",
       "      <td>27°57′42″N 86°55′59″E﻿</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Makalu</th>\n",
       "      <td>8485</td>\n",
       "      <td>Mahalangur Himalaya</td>\n",
       "      <td>27°53′23″N 87°05′20″E﻿</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Cho Oyu</th>\n",
       "      <td>8188</td>\n",
       "      <td>Mahalangur Himalaya</td>\n",
       "      <td>28°05′39″N 86°39′39″E﻿</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Dhaulagiri I</th>\n",
       "      <td>8167</td>\n",
       "      <td>Dhaulagiri Himalaya</td>\n",
       "      <td>28°41′48″N 83°29′35″E﻿</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Manaslu</th>\n",
       "      <td>8163</td>\n",
       "      <td>Manaslu Himalaya</td>\n",
       "      <td>28°33′00″N 84°33′35″E﻿</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Nanga Parbat</th>\n",
       "      <td>8126</td>\n",
       "      <td>Nanga Parbat Himalaya</td>\n",
       "      <td>35°14′14″N 74°35′21″E﻿</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Annapurna I</th>\n",
       "      <td>8091</td>\n",
       "      <td>Annapurna Himalaya</td>\n",
       "      <td>28°35′44″N 83°49′13″E﻿</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                          Height (m)                   Range  \\\n",
       "Mountain                                                                       \n",
       "Mount Everest / Sagarmatha / Chomolungma        8848     Mahalangur Himalaya   \n",
       "K2 / Qogir / Godwin Austen                      8611       Baltoro Karakoram   \n",
       "Kangchenjunga                                   8586  Kangchenjunga Himalaya   \n",
       "Lhotse                                          8516     Mahalangur Himalaya   \n",
       "Makalu                                          8485     Mahalangur Himalaya   \n",
       "Cho Oyu                                         8188     Mahalangur Himalaya   \n",
       "Dhaulagiri I                                    8167     Dhaulagiri Himalaya   \n",
       "Manaslu                                         8163        Manaslu Himalaya   \n",
       "Nanga Parbat                                    8126   Nanga Parbat Himalaya   \n",
       "Annapurna I                                     8091      Annapurna Himalaya   \n",
       "\n",
       "                                                      Coordinates  \n",
       "Mountain                                                           \n",
       "Mount Everest / Sagarmatha / Chomolungma  27°59′17″N 86°55′31″E﻿   \n",
       "K2 / Qogir / Godwin Austen                35°52′53″N 76°30′48″E﻿   \n",
       "Kangchenjunga                             27°42′12″N 88°08′51″E﻿   \n",
       "Lhotse                                    27°57′42″N 86°55′59″E﻿   \n",
       "Makalu                                    27°53′23″N 87°05′20″E﻿   \n",
       "Cho Oyu                                   28°05′39″N 86°39′39″E﻿   \n",
       "Dhaulagiri I                              28°41′48″N 83°29′35″E﻿   \n",
       "Manaslu                                   28°33′00″N 84°33′35″E﻿   \n",
       "Nanga Parbat                              35°14′14″N 74°35′21″E﻿   \n",
       "Annapurna I                               28°35′44″N 83°49′13″E﻿   "
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[['Height (m)', 'Range', 'Coordinates']]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "As soon as we select more than one column, the returned object is a DataFrame as supposed to a Series. \n",
    "\n",
    "# The index operator `[ ]` to select rows\n",
    "\n",
    "We can also use the index operator with Python's slice notation. Recall the general syntax for the slice notation for an iterable object `a`:\n",
    "```\n",
    "a[start:stop:step]\n",
    "```\n",
    "\n",
    "When used on a DataFrame the slicing will be applied to the **rows** of the DataFrame. Here is an example"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Height (m)</th>\n",
       "      <th>Range</th>\n",
       "      <th>Coordinates</th>\n",
       "      <th>Parent mountain</th>\n",
       "      <th>First ascent</th>\n",
       "      <th>Ascents bef. 2004</th>\n",
       "      <th>Failed attempts bef. 2004</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mountain</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Kangchenjunga</th>\n",
       "      <td>8586</td>\n",
       "      <td>Kangchenjunga Himalaya</td>\n",
       "      <td>27°42′12″N 88°08′51″E﻿</td>\n",
       "      <td>Mount Everest</td>\n",
       "      <td>1955</td>\n",
       "      <td>38</td>\n",
       "      <td>24.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Lhotse</th>\n",
       "      <td>8516</td>\n",
       "      <td>Mahalangur Himalaya</td>\n",
       "      <td>27°57′42″N 86°55′59″E﻿</td>\n",
       "      <td>Mount Everest</td>\n",
       "      <td>1956</td>\n",
       "      <td>26</td>\n",
       "      <td>26.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Makalu</th>\n",
       "      <td>8485</td>\n",
       "      <td>Mahalangur Himalaya</td>\n",
       "      <td>27°53′23″N 87°05′20″E﻿</td>\n",
       "      <td>Mount Everest</td>\n",
       "      <td>1955</td>\n",
       "      <td>45</td>\n",
       "      <td>52.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Cho Oyu</th>\n",
       "      <td>8188</td>\n",
       "      <td>Mahalangur Himalaya</td>\n",
       "      <td>28°05′39″N 86°39′39″E﻿</td>\n",
       "      <td>Mount Everest</td>\n",
       "      <td>1954</td>\n",
       "      <td>79</td>\n",
       "      <td>28.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Dhaulagiri I</th>\n",
       "      <td>8167</td>\n",
       "      <td>Dhaulagiri Himalaya</td>\n",
       "      <td>28°41′48″N 83°29′35″E﻿</td>\n",
       "      <td>K2</td>\n",
       "      <td>1960</td>\n",
       "      <td>51</td>\n",
       "      <td>39.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Manaslu</th>\n",
       "      <td>8163</td>\n",
       "      <td>Manaslu Himalaya</td>\n",
       "      <td>28°33′00″N 84°33′35″E﻿</td>\n",
       "      <td>Cho Oyu</td>\n",
       "      <td>1956</td>\n",
       "      <td>49</td>\n",
       "      <td>45.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               Height (m)                   Range              Coordinates  \\\n",
       "Mountain                                                                     \n",
       "Kangchenjunga        8586  Kangchenjunga Himalaya  27°42′12″N 88°08′51″E﻿    \n",
       "Lhotse               8516     Mahalangur Himalaya  27°57′42″N 86°55′59″E﻿    \n",
       "Makalu               8485     Mahalangur Himalaya  27°53′23″N 87°05′20″E﻿    \n",
       "Cho Oyu              8188     Mahalangur Himalaya  28°05′39″N 86°39′39″E﻿    \n",
       "Dhaulagiri I         8167     Dhaulagiri Himalaya  28°41′48″N 83°29′35″E﻿    \n",
       "Manaslu              8163        Manaslu Himalaya  28°33′00″N 84°33′35″E﻿    \n",
       "\n",
       "              Parent mountain  First ascent Ascents bef. 2004  \\\n",
       "Mountain                                                        \n",
       "Kangchenjunga   Mount Everest          1955                38   \n",
       "Lhotse          Mount Everest          1956                26   \n",
       "Makalu          Mount Everest          1955                45   \n",
       "Cho Oyu         Mount Everest          1954                79   \n",
       "Dhaulagiri I               K2          1960                51   \n",
       "Manaslu               Cho Oyu          1956                49   \n",
       "\n",
       "               Failed attempts bef. 2004  \n",
       "Mountain                                  \n",
       "Kangchenjunga                       24.0  \n",
       "Lhotse                              26.0  \n",
       "Makalu                              52.0  \n",
       "Cho Oyu                             28.0  \n",
       "Dhaulagiri I                        39.0  \n",
       "Manaslu                             45.0  "
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[2:8]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true
   },
   "source": [
    "This selects the rows starting at position `2` (inclusive) and up to position `8` (exclusive). \n",
    "\n",
    "We can also use the slicing notation with the index labels as follows"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Height (m)</th>\n",
       "      <th>Range</th>\n",
       "      <th>Coordinates</th>\n",
       "      <th>Parent mountain</th>\n",
       "      <th>First ascent</th>\n",
       "      <th>Ascents bef. 2004</th>\n",
       "      <th>Failed attempts bef. 2004</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mountain</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Lhotse</th>\n",
       "      <td>8516</td>\n",
       "      <td>Mahalangur Himalaya</td>\n",
       "      <td>27°57′42″N 86°55′59″E﻿</td>\n",
       "      <td>Mount Everest</td>\n",
       "      <td>1956</td>\n",
       "      <td>26</td>\n",
       "      <td>26.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Makalu</th>\n",
       "      <td>8485</td>\n",
       "      <td>Mahalangur Himalaya</td>\n",
       "      <td>27°53′23″N 87°05′20″E﻿</td>\n",
       "      <td>Mount Everest</td>\n",
       "      <td>1955</td>\n",
       "      <td>45</td>\n",
       "      <td>52.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Cho Oyu</th>\n",
       "      <td>8188</td>\n",
       "      <td>Mahalangur Himalaya</td>\n",
       "      <td>28°05′39″N 86°39′39″E﻿</td>\n",
       "      <td>Mount Everest</td>\n",
       "      <td>1954</td>\n",
       "      <td>79</td>\n",
       "      <td>28.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Dhaulagiri I</th>\n",
       "      <td>8167</td>\n",
       "      <td>Dhaulagiri Himalaya</td>\n",
       "      <td>28°41′48″N 83°29′35″E﻿</td>\n",
       "      <td>K2</td>\n",
       "      <td>1960</td>\n",
       "      <td>51</td>\n",
       "      <td>39.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Manaslu</th>\n",
       "      <td>8163</td>\n",
       "      <td>Manaslu Himalaya</td>\n",
       "      <td>28°33′00″N 84°33′35″E﻿</td>\n",
       "      <td>Cho Oyu</td>\n",
       "      <td>1956</td>\n",
       "      <td>49</td>\n",
       "      <td>45.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              Height (m)                Range              Coordinates  \\\n",
       "Mountain                                                                 \n",
       "Lhotse              8516  Mahalangur Himalaya  27°57′42″N 86°55′59″E﻿    \n",
       "Makalu              8485  Mahalangur Himalaya  27°53′23″N 87°05′20″E﻿    \n",
       "Cho Oyu             8188  Mahalangur Himalaya  28°05′39″N 86°39′39″E﻿    \n",
       "Dhaulagiri I        8167  Dhaulagiri Himalaya  28°41′48″N 83°29′35″E﻿    \n",
       "Manaslu             8163     Manaslu Himalaya  28°33′00″N 84°33′35″E﻿    \n",
       "\n",
       "             Parent mountain  First ascent Ascents bef. 2004  \\\n",
       "Mountain                                                       \n",
       "Lhotse         Mount Everest          1956                26   \n",
       "Makalu         Mount Everest          1955                45   \n",
       "Cho Oyu        Mount Everest          1954                79   \n",
       "Dhaulagiri I              K2          1960                51   \n",
       "Manaslu              Cho Oyu          1956                49   \n",
       "\n",
       "              Failed attempts bef. 2004  \n",
       "Mountain                                 \n",
       "Lhotse                             26.0  \n",
       "Makalu                             52.0  \n",
       "Cho Oyu                            28.0  \n",
       "Dhaulagiri I                       39.0  \n",
       "Manaslu                            45.0  "
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Lhotse':'Manaslu']"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Note when used with the index labels as supposed to the positions the slicing notation becomes inclusive of **both** the start and end value. \n",
    "\n",
    "We have seen how to select multiple rows or multiple columns individually, but what if we would like to simultaneously select a subset of the rows **and** a subset of the columns. This is what the next two operators help us achieve."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# The `iloc` operator to select rows and columns based on position"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The `iloc` operator allows us to slice both rows and columns using their position. The general syntax is the follows:\n",
    "```\n",
    "df.iloc[rows, columns]\n",
    "```\n",
    "\n",
    "where **rows** gives the positions of the rows that we want to select and **columns** gives the positions of the columns we want to select. These positions can be specified in several ways:\n",
    "\n",
    "* single position value, e.g. `3`\n",
    "* a list of position values, e.g. `[3,5,8]`\n",
    "* a slice of position values, e.g. `3:8`\n",
    "* the `:` symbol to select *all* the rows and/or columns\n",
    "\n",
    "Let's try some examples"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Coordinates</th>\n",
       "      <th>Parent mountain</th>\n",
       "      <th>First ascent</th>\n",
       "      <th>Ascents bef. 2004</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mountain</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Mount Everest / Sagarmatha / Chomolungma</th>\n",
       "      <td>27°59′17″N 86°55′31″E﻿</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1953</td>\n",
       "      <td>&gt;&gt;145</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>K2 / Qogir / Godwin Austen</th>\n",
       "      <td>35°52′53″N 76°30′48″E﻿</td>\n",
       "      <td>Mount Everest</td>\n",
       "      <td>1954</td>\n",
       "      <td>45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Kangchenjunga</th>\n",
       "      <td>27°42′12″N 88°08′51″E﻿</td>\n",
       "      <td>Mount Everest</td>\n",
       "      <td>1955</td>\n",
       "      <td>38</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Lhotse</th>\n",
       "      <td>27°57′42″N 86°55′59″E﻿</td>\n",
       "      <td>Mount Everest</td>\n",
       "      <td>1956</td>\n",
       "      <td>26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Makalu</th>\n",
       "      <td>27°53′23″N 87°05′20″E﻿</td>\n",
       "      <td>Mount Everest</td>\n",
       "      <td>1955</td>\n",
       "      <td>45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Cho Oyu</th>\n",
       "      <td>28°05′39″N 86°39′39″E﻿</td>\n",
       "      <td>Mount Everest</td>\n",
       "      <td>1954</td>\n",
       "      <td>79</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Dhaulagiri I</th>\n",
       "      <td>28°41′48″N 83°29′35″E﻿</td>\n",
       "      <td>K2</td>\n",
       "      <td>1960</td>\n",
       "      <td>51</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Manaslu</th>\n",
       "      <td>28°33′00″N 84°33′35″E﻿</td>\n",
       "      <td>Cho Oyu</td>\n",
       "      <td>1956</td>\n",
       "      <td>49</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Nanga Parbat</th>\n",
       "      <td>35°14′14″N 74°35′21″E﻿</td>\n",
       "      <td>Dhaulagiri</td>\n",
       "      <td>1953</td>\n",
       "      <td>52</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Annapurna I</th>\n",
       "      <td>28°35′44″N 83°49′13″E﻿</td>\n",
       "      <td>Cho Oyu</td>\n",
       "      <td>1950</td>\n",
       "      <td>36</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                      Coordinates  \\\n",
       "Mountain                                                            \n",
       "Mount Everest / Sagarmatha / Chomolungma  27°59′17″N 86°55′31″E﻿    \n",
       "K2 / Qogir / Godwin Austen                35°52′53″N 76°30′48″E﻿    \n",
       "Kangchenjunga                             27°42′12″N 88°08′51″E﻿    \n",
       "Lhotse                                    27°57′42″N 86°55′59″E﻿    \n",
       "Makalu                                    27°53′23″N 87°05′20″E﻿    \n",
       "Cho Oyu                                   28°05′39″N 86°39′39″E﻿    \n",
       "Dhaulagiri I                              28°41′48″N 83°29′35″E﻿    \n",
       "Manaslu                                   28°33′00″N 84°33′35″E﻿    \n",
       "Nanga Parbat                              35°14′14″N 74°35′21″E﻿    \n",
       "Annapurna I                               28°35′44″N 83°49′13″E﻿    \n",
       "\n",
       "                                         Parent mountain  First ascent  \\\n",
       "Mountain                                                                 \n",
       "Mount Everest / Sagarmatha / Chomolungma             NaN          1953   \n",
       "K2 / Qogir / Godwin Austen                 Mount Everest          1954   \n",
       "Kangchenjunga                              Mount Everest          1955   \n",
       "Lhotse                                     Mount Everest          1956   \n",
       "Makalu                                     Mount Everest          1955   \n",
       "Cho Oyu                                    Mount Everest          1954   \n",
       "Dhaulagiri I                                          K2          1960   \n",
       "Manaslu                                          Cho Oyu          1956   \n",
       "Nanga Parbat                                  Dhaulagiri          1953   \n",
       "Annapurna I                                      Cho Oyu          1950   \n",
       "\n",
       "                                         Ascents bef. 2004  \n",
       "Mountain                                                    \n",
       "Mount Everest / Sagarmatha / Chomolungma            >>145   \n",
       "K2 / Qogir / Godwin Austen                              45  \n",
       "Kangchenjunga                                           38  \n",
       "Lhotse                                                  26  \n",
       "Makalu                                                  45  \n",
       "Cho Oyu                                                 79  \n",
       "Dhaulagiri I                                            51  \n",
       "Manaslu                                                 49  \n",
       "Nanga Parbat                                            52  \n",
       "Annapurna I                                             36  "
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.iloc[:, 2:6]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Here we are selecting all of the rows, and we are using the slicing notation `2:6` for the columns which returns the columns starting at position `2` (inclusive) and up to position `6` exclusive. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Coordinates</th>\n",
       "      <th>Parent mountain</th>\n",
       "      <th>First ascent</th>\n",
       "      <th>Ascents bef. 2004</th>\n",
       "      <th>Failed attempts bef. 2004</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mountain</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Mount Everest / Sagarmatha / Chomolungma</th>\n",
       "      <td>27°59′17″N 86°55′31″E﻿</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1953</td>\n",
       "      <td>&gt;&gt;145</td>\n",
       "      <td>121.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Kangchenjunga</th>\n",
       "      <td>27°42′12″N 88°08′51″E﻿</td>\n",
       "      <td>Mount Everest</td>\n",
       "      <td>1955</td>\n",
       "      <td>38</td>\n",
       "      <td>24.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Makalu</th>\n",
       "      <td>27°53′23″N 87°05′20″E﻿</td>\n",
       "      <td>Mount Everest</td>\n",
       "      <td>1955</td>\n",
       "      <td>45</td>\n",
       "      <td>52.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Dhaulagiri I</th>\n",
       "      <td>28°41′48″N 83°29′35″E﻿</td>\n",
       "      <td>K2</td>\n",
       "      <td>1960</td>\n",
       "      <td>51</td>\n",
       "      <td>39.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Nanga Parbat</th>\n",
       "      <td>35°14′14″N 74°35′21″E﻿</td>\n",
       "      <td>Dhaulagiri</td>\n",
       "      <td>1953</td>\n",
       "      <td>52</td>\n",
       "      <td>67.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                      Coordinates  \\\n",
       "Mountain                                                            \n",
       "Mount Everest / Sagarmatha / Chomolungma  27°59′17″N 86°55′31″E﻿    \n",
       "Kangchenjunga                             27°42′12″N 88°08′51″E﻿    \n",
       "Makalu                                    27°53′23″N 87°05′20″E﻿    \n",
       "Dhaulagiri I                              28°41′48″N 83°29′35″E﻿    \n",
       "Nanga Parbat                              35°14′14″N 74°35′21″E﻿    \n",
       "\n",
       "                                         Parent mountain  First ascent  \\\n",
       "Mountain                                                                 \n",
       "Mount Everest / Sagarmatha / Chomolungma             NaN          1953   \n",
       "Kangchenjunga                              Mount Everest          1955   \n",
       "Makalu                                     Mount Everest          1955   \n",
       "Dhaulagiri I                                          K2          1960   \n",
       "Nanga Parbat                                  Dhaulagiri          1953   \n",
       "\n",
       "                                         Ascents bef. 2004  \\\n",
       "Mountain                                                     \n",
       "Mount Everest / Sagarmatha / Chomolungma            >>145    \n",
       "Kangchenjunga                                           38   \n",
       "Makalu                                                  45   \n",
       "Dhaulagiri I                                            51   \n",
       "Nanga Parbat                                            52   \n",
       "\n",
       "                                          Failed attempts bef. 2004  \n",
       "Mountain                                                             \n",
       "Mount Everest / Sagarmatha / Chomolungma                      121.0  \n",
       "Kangchenjunga                                                  24.0  \n",
       "Makalu                                                         52.0  \n",
       "Dhaulagiri I                                                   39.0  \n",
       "Nanga Parbat                                                   67.0  "
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.iloc[::2, 2:]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Here we are using the slicing notation `::2` for the rows which selecting every second row from the first to and up to the last. We are then using the slicing notation `:2` for the columns which selects every column from position `2` to the last column of the DataFrame. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# The `loc` operator to select rows and columns by labels\n",
    "\n",
    "The `loc` operator is similar to the `iloc` operator except that instead of referencing rows and columns using their position in the DataFrame we use the index labels and column names respectively. The general syntax is exactly the same\n",
    "\n",
    "```\n",
    "df.loc[rows, columns]\n",
    "```\n",
    "\n",
    "where **rows** can now take the form of \n",
    "* a single index label, e.g. 'Makalu'\n",
    "* a list of index labels, e.g. ['Makalu', 'Nanga Parbat']\n",
    "* a slice of index labels, e.g. 'Makalu':'Nanga Parbat'\n",
    "* the `:` symbol to select *all* the rows\n",
    "\n",
    "and **columns** can take the form of\n",
    "* a single column name, e.g. 'Range'\n",
    "* a list of column names, e.g. ['Range', 'Parent mountain']\n",
    "* a slice of column names, e.g. 'Height (m)':'First ascent'\n",
    "* the `:` symbol to select *all* the columns\n",
    "\n",
    "**Remark**: the slicing notation when used with index labels or column names inclusive of **both** the `start` and `end`! This is in contrast to the usual slicing notation in Python used with integer values which is inclusive of the `start` but exclusive of the `end`.  \n",
    "\n",
    "Let's try some examples"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Height (m)</th>\n",
       "      <th>Range</th>\n",
       "      <th>Coordinates</th>\n",
       "      <th>Parent mountain</th>\n",
       "      <th>First ascent</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mountain</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Mount Everest / Sagarmatha / Chomolungma</th>\n",
       "      <td>8848</td>\n",
       "      <td>Mahalangur Himalaya</td>\n",
       "      <td>27°59′17″N 86°55′31″E﻿</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1953</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>K2 / Qogir / Godwin Austen</th>\n",
       "      <td>8611</td>\n",
       "      <td>Baltoro Karakoram</td>\n",
       "      <td>35°52′53″N 76°30′48″E﻿</td>\n",
       "      <td>Mount Everest</td>\n",
       "      <td>1954</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Kangchenjunga</th>\n",
       "      <td>8586</td>\n",
       "      <td>Kangchenjunga Himalaya</td>\n",
       "      <td>27°42′12″N 88°08′51″E﻿</td>\n",
       "      <td>Mount Everest</td>\n",
       "      <td>1955</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Lhotse</th>\n",
       "      <td>8516</td>\n",
       "      <td>Mahalangur Himalaya</td>\n",
       "      <td>27°57′42″N 86°55′59″E﻿</td>\n",
       "      <td>Mount Everest</td>\n",
       "      <td>1956</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Makalu</th>\n",
       "      <td>8485</td>\n",
       "      <td>Mahalangur Himalaya</td>\n",
       "      <td>27°53′23″N 87°05′20″E﻿</td>\n",
       "      <td>Mount Everest</td>\n",
       "      <td>1955</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Cho Oyu</th>\n",
       "      <td>8188</td>\n",
       "      <td>Mahalangur Himalaya</td>\n",
       "      <td>28°05′39″N 86°39′39″E﻿</td>\n",
       "      <td>Mount Everest</td>\n",
       "      <td>1954</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Dhaulagiri I</th>\n",
       "      <td>8167</td>\n",
       "      <td>Dhaulagiri Himalaya</td>\n",
       "      <td>28°41′48″N 83°29′35″E﻿</td>\n",
       "      <td>K2</td>\n",
       "      <td>1960</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Manaslu</th>\n",
       "      <td>8163</td>\n",
       "      <td>Manaslu Himalaya</td>\n",
       "      <td>28°33′00″N 84°33′35″E﻿</td>\n",
       "      <td>Cho Oyu</td>\n",
       "      <td>1956</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Nanga Parbat</th>\n",
       "      <td>8126</td>\n",
       "      <td>Nanga Parbat Himalaya</td>\n",
       "      <td>35°14′14″N 74°35′21″E﻿</td>\n",
       "      <td>Dhaulagiri</td>\n",
       "      <td>1953</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Annapurna I</th>\n",
       "      <td>8091</td>\n",
       "      <td>Annapurna Himalaya</td>\n",
       "      <td>28°35′44″N 83°49′13″E﻿</td>\n",
       "      <td>Cho Oyu</td>\n",
       "      <td>1950</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                          Height (m)                   Range  \\\n",
       "Mountain                                                                       \n",
       "Mount Everest / Sagarmatha / Chomolungma        8848     Mahalangur Himalaya   \n",
       "K2 / Qogir / Godwin Austen                      8611       Baltoro Karakoram   \n",
       "Kangchenjunga                                   8586  Kangchenjunga Himalaya   \n",
       "Lhotse                                          8516     Mahalangur Himalaya   \n",
       "Makalu                                          8485     Mahalangur Himalaya   \n",
       "Cho Oyu                                         8188     Mahalangur Himalaya   \n",
       "Dhaulagiri I                                    8167     Dhaulagiri Himalaya   \n",
       "Manaslu                                         8163        Manaslu Himalaya   \n",
       "Nanga Parbat                                    8126   Nanga Parbat Himalaya   \n",
       "Annapurna I                                     8091      Annapurna Himalaya   \n",
       "\n",
       "                                                      Coordinates  \\\n",
       "Mountain                                                            \n",
       "Mount Everest / Sagarmatha / Chomolungma  27°59′17″N 86°55′31″E﻿    \n",
       "K2 / Qogir / Godwin Austen                35°52′53″N 76°30′48″E﻿    \n",
       "Kangchenjunga                             27°42′12″N 88°08′51″E﻿    \n",
       "Lhotse                                    27°57′42″N 86°55′59″E﻿    \n",
       "Makalu                                    27°53′23″N 87°05′20″E﻿    \n",
       "Cho Oyu                                   28°05′39″N 86°39′39″E﻿    \n",
       "Dhaulagiri I                              28°41′48″N 83°29′35″E﻿    \n",
       "Manaslu                                   28°33′00″N 84°33′35″E﻿    \n",
       "Nanga Parbat                              35°14′14″N 74°35′21″E﻿    \n",
       "Annapurna I                               28°35′44″N 83°49′13″E﻿    \n",
       "\n",
       "                                         Parent mountain  First ascent  \n",
       "Mountain                                                                \n",
       "Mount Everest / Sagarmatha / Chomolungma             NaN          1953  \n",
       "K2 / Qogir / Godwin Austen                 Mount Everest          1954  \n",
       "Kangchenjunga                              Mount Everest          1955  \n",
       "Lhotse                                     Mount Everest          1956  \n",
       "Makalu                                     Mount Everest          1955  \n",
       "Cho Oyu                                    Mount Everest          1954  \n",
       "Dhaulagiri I                                          K2          1960  \n",
       "Manaslu                                          Cho Oyu          1956  \n",
       "Nanga Parbat                                  Dhaulagiri          1953  \n",
       "Annapurna I                                      Cho Oyu          1950  "
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.loc[:,'Height (m)':'First ascent']"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Here we used the `:` symbol to select all the rows and we then used the slice notation `'Height (m)':'First ascent'` to select all columns from `'Height (m)'` (inclusive) up to `'First ascent'` (inclusive). In the slice notation we can also include a step size just as before. So if we wanted to select every other column from this previous selection we would write"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Height (m)</th>\n",
       "      <th>Coordinates</th>\n",
       "      <th>First ascent</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mountain</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Mount Everest / Sagarmatha / Chomolungma</th>\n",
       "      <td>8848</td>\n",
       "      <td>27°59′17″N 86°55′31″E﻿</td>\n",
       "      <td>1953</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>K2 / Qogir / Godwin Austen</th>\n",
       "      <td>8611</td>\n",
       "      <td>35°52′53″N 76°30′48″E﻿</td>\n",
       "      <td>1954</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Kangchenjunga</th>\n",
       "      <td>8586</td>\n",
       "      <td>27°42′12″N 88°08′51″E﻿</td>\n",
       "      <td>1955</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Lhotse</th>\n",
       "      <td>8516</td>\n",
       "      <td>27°57′42″N 86°55′59″E﻿</td>\n",
       "      <td>1956</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Makalu</th>\n",
       "      <td>8485</td>\n",
       "      <td>27°53′23″N 87°05′20″E﻿</td>\n",
       "      <td>1955</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Cho Oyu</th>\n",
       "      <td>8188</td>\n",
       "      <td>28°05′39″N 86°39′39″E﻿</td>\n",
       "      <td>1954</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Dhaulagiri I</th>\n",
       "      <td>8167</td>\n",
       "      <td>28°41′48″N 83°29′35″E﻿</td>\n",
       "      <td>1960</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Manaslu</th>\n",
       "      <td>8163</td>\n",
       "      <td>28°33′00″N 84°33′35″E﻿</td>\n",
       "      <td>1956</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Nanga Parbat</th>\n",
       "      <td>8126</td>\n",
       "      <td>35°14′14″N 74°35′21″E﻿</td>\n",
       "      <td>1953</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Annapurna I</th>\n",
       "      <td>8091</td>\n",
       "      <td>28°35′44″N 83°49′13″E﻿</td>\n",
       "      <td>1950</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                          Height (m)              Coordinates  \\\n",
       "Mountain                                                                        \n",
       "Mount Everest / Sagarmatha / Chomolungma        8848  27°59′17″N 86°55′31″E﻿    \n",
       "K2 / Qogir / Godwin Austen                      8611  35°52′53″N 76°30′48″E﻿    \n",
       "Kangchenjunga                                   8586  27°42′12″N 88°08′51″E﻿    \n",
       "Lhotse                                          8516  27°57′42″N 86°55′59″E﻿    \n",
       "Makalu                                          8485  27°53′23″N 87°05′20″E﻿    \n",
       "Cho Oyu                                         8188  28°05′39″N 86°39′39″E﻿    \n",
       "Dhaulagiri I                                    8167  28°41′48″N 83°29′35″E﻿    \n",
       "Manaslu                                         8163  28°33′00″N 84°33′35″E﻿    \n",
       "Nanga Parbat                                    8126  35°14′14″N 74°35′21″E﻿    \n",
       "Annapurna I                                     8091  28°35′44″N 83°49′13″E﻿    \n",
       "\n",
       "                                          First ascent  \n",
       "Mountain                                                \n",
       "Mount Everest / Sagarmatha / Chomolungma          1953  \n",
       "K2 / Qogir / Godwin Austen                        1954  \n",
       "Kangchenjunga                                     1955  \n",
       "Lhotse                                            1956  \n",
       "Makalu                                            1955  \n",
       "Cho Oyu                                           1954  \n",
       "Dhaulagiri I                                      1960  \n",
       "Manaslu                                           1956  \n",
       "Nanga Parbat                                      1953  \n",
       "Annapurna I                                       1950  "
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.loc[:,'Height (m)':'First ascent':2]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Boolean selection\n",
    "\n",
    "The methods we have considered so far select rows and columns based on either their position in the DataFrame or their index label and column names respectively. We can also select rows and columns based on a boolean condition. Boolean conditions can be used with either the `[]` operator or the `.loc` operator. Below we consider the possible ways to do this.\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "## Boolean selection of rows using the `[ ]` operator\n",
    "\n",
    "This applies when we want to select some rows based on a boolean condition on one or more of the columns. For example we might be interested in all the rows that correspond to mountains over 8000 meters. Then boolean condition for this is \n",
    "\n",
    "```\n",
    "df['Height'] > 8000]\n",
    "```\n",
    "\n",
    "When executed by itself it will return a Series of `True` `False` values corresponding to each row of the DataFrame. When passed to the index operator `[]`, the rows corresponding to `True` values will be returned."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Height (m)</th>\n",
       "      <th>Range</th>\n",
       "      <th>Coordinates</th>\n",
       "      <th>Parent mountain</th>\n",
       "      <th>First ascent</th>\n",
       "      <th>Ascents bef. 2004</th>\n",
       "      <th>Failed attempts bef. 2004</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mountain</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Mount Everest / Sagarmatha / Chomolungma</th>\n",
       "      <td>8848</td>\n",
       "      <td>Mahalangur Himalaya</td>\n",
       "      <td>27°59′17″N 86°55′31″E﻿</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1953</td>\n",
       "      <td>&gt;&gt;145</td>\n",
       "      <td>121.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>K2 / Qogir / Godwin Austen</th>\n",
       "      <td>8611</td>\n",
       "      <td>Baltoro Karakoram</td>\n",
       "      <td>35°52′53″N 76°30′48″E﻿</td>\n",
       "      <td>Mount Everest</td>\n",
       "      <td>1954</td>\n",
       "      <td>45</td>\n",
       "      <td>44.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Kangchenjunga</th>\n",
       "      <td>8586</td>\n",
       "      <td>Kangchenjunga Himalaya</td>\n",
       "      <td>27°42′12″N 88°08′51″E﻿</td>\n",
       "      <td>Mount Everest</td>\n",
       "      <td>1955</td>\n",
       "      <td>38</td>\n",
       "      <td>24.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Lhotse</th>\n",
       "      <td>8516</td>\n",
       "      <td>Mahalangur Himalaya</td>\n",
       "      <td>27°57′42″N 86°55′59″E﻿</td>\n",
       "      <td>Mount Everest</td>\n",
       "      <td>1956</td>\n",
       "      <td>26</td>\n",
       "      <td>26.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Makalu</th>\n",
       "      <td>8485</td>\n",
       "      <td>Mahalangur Himalaya</td>\n",
       "      <td>27°53′23″N 87°05′20″E﻿</td>\n",
       "      <td>Mount Everest</td>\n",
       "      <td>1955</td>\n",
       "      <td>45</td>\n",
       "      <td>52.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Cho Oyu</th>\n",
       "      <td>8188</td>\n",
       "      <td>Mahalangur Himalaya</td>\n",
       "      <td>28°05′39″N 86°39′39″E﻿</td>\n",
       "      <td>Mount Everest</td>\n",
       "      <td>1954</td>\n",
       "      <td>79</td>\n",
       "      <td>28.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Dhaulagiri I</th>\n",
       "      <td>8167</td>\n",
       "      <td>Dhaulagiri Himalaya</td>\n",
       "      <td>28°41′48″N 83°29′35″E﻿</td>\n",
       "      <td>K2</td>\n",
       "      <td>1960</td>\n",
       "      <td>51</td>\n",
       "      <td>39.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Manaslu</th>\n",
       "      <td>8163</td>\n",
       "      <td>Manaslu Himalaya</td>\n",
       "      <td>28°33′00″N 84°33′35″E﻿</td>\n",
       "      <td>Cho Oyu</td>\n",
       "      <td>1956</td>\n",
       "      <td>49</td>\n",
       "      <td>45.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Nanga Parbat</th>\n",
       "      <td>8126</td>\n",
       "      <td>Nanga Parbat Himalaya</td>\n",
       "      <td>35°14′14″N 74°35′21″E﻿</td>\n",
       "      <td>Dhaulagiri</td>\n",
       "      <td>1953</td>\n",
       "      <td>52</td>\n",
       "      <td>67.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Annapurna I</th>\n",
       "      <td>8091</td>\n",
       "      <td>Annapurna Himalaya</td>\n",
       "      <td>28°35′44″N 83°49′13″E﻿</td>\n",
       "      <td>Cho Oyu</td>\n",
       "      <td>1950</td>\n",
       "      <td>36</td>\n",
       "      <td>47.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                          Height (m)                   Range  \\\n",
       "Mountain                                                                       \n",
       "Mount Everest / Sagarmatha / Chomolungma        8848     Mahalangur Himalaya   \n",
       "K2 / Qogir / Godwin Austen                      8611       Baltoro Karakoram   \n",
       "Kangchenjunga                                   8586  Kangchenjunga Himalaya   \n",
       "Lhotse                                          8516     Mahalangur Himalaya   \n",
       "Makalu                                          8485     Mahalangur Himalaya   \n",
       "Cho Oyu                                         8188     Mahalangur Himalaya   \n",
       "Dhaulagiri I                                    8167     Dhaulagiri Himalaya   \n",
       "Manaslu                                         8163        Manaslu Himalaya   \n",
       "Nanga Parbat                                    8126   Nanga Parbat Himalaya   \n",
       "Annapurna I                                     8091      Annapurna Himalaya   \n",
       "\n",
       "                                                      Coordinates  \\\n",
       "Mountain                                                            \n",
       "Mount Everest / Sagarmatha / Chomolungma  27°59′17″N 86°55′31″E﻿    \n",
       "K2 / Qogir / Godwin Austen                35°52′53″N 76°30′48″E﻿    \n",
       "Kangchenjunga                             27°42′12″N 88°08′51″E﻿    \n",
       "Lhotse                                    27°57′42″N 86°55′59″E﻿    \n",
       "Makalu                                    27°53′23″N 87°05′20″E﻿    \n",
       "Cho Oyu                                   28°05′39″N 86°39′39″E﻿    \n",
       "Dhaulagiri I                              28°41′48″N 83°29′35″E﻿    \n",
       "Manaslu                                   28°33′00″N 84°33′35″E﻿    \n",
       "Nanga Parbat                              35°14′14″N 74°35′21″E﻿    \n",
       "Annapurna I                               28°35′44″N 83°49′13″E﻿    \n",
       "\n",
       "                                         Parent mountain  First ascent  \\\n",
       "Mountain                                                                 \n",
       "Mount Everest / Sagarmatha / Chomolungma             NaN          1953   \n",
       "K2 / Qogir / Godwin Austen                 Mount Everest          1954   \n",
       "Kangchenjunga                              Mount Everest          1955   \n",
       "Lhotse                                     Mount Everest          1956   \n",
       "Makalu                                     Mount Everest          1955   \n",
       "Cho Oyu                                    Mount Everest          1954   \n",
       "Dhaulagiri I                                          K2          1960   \n",
       "Manaslu                                          Cho Oyu          1956   \n",
       "Nanga Parbat                                  Dhaulagiri          1953   \n",
       "Annapurna I                                      Cho Oyu          1950   \n",
       "\n",
       "                                         Ascents bef. 2004  \\\n",
       "Mountain                                                     \n",
       "Mount Everest / Sagarmatha / Chomolungma            >>145    \n",
       "K2 / Qogir / Godwin Austen                              45   \n",
       "Kangchenjunga                                           38   \n",
       "Lhotse                                                  26   \n",
       "Makalu                                                  45   \n",
       "Cho Oyu                                                 79   \n",
       "Dhaulagiri I                                            51   \n",
       "Manaslu                                                 49   \n",
       "Nanga Parbat                                            52   \n",
       "Annapurna I                                             36   \n",
       "\n",
       "                                          Failed attempts bef. 2004  \n",
       "Mountain                                                             \n",
       "Mount Everest / Sagarmatha / Chomolungma                      121.0  \n",
       "K2 / Qogir / Godwin Austen                                     44.0  \n",
       "Kangchenjunga                                                  24.0  \n",
       "Lhotse                                                         26.0  \n",
       "Makalu                                                         52.0  \n",
       "Cho Oyu                                                        28.0  \n",
       "Dhaulagiri I                                                   39.0  \n",
       "Manaslu                                                        45.0  \n",
       "Nanga Parbat                                                   67.0  \n",
       "Annapurna I                                                    47.0  "
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[df['Height (m)'] > 8000]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true
   },
   "source": [
    "We can also use boolean selection with multiple criteria. To do this we must use the logical operators to combine our conditions. Although in Python we can use the syntax `and`, `or`, and `not`, these will not work when testing multiple conditions with pandas. Instead, we must use the operators \n",
    "\n",
    "* `&` for and\n",
    "* `|` for or\n",
    "* `~` for not\n",
    "\n",
    "In addition, we must use parentheses to separate the boolean conditions. Let's give this a try"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Height (m)</th>\n",
       "      <th>Range</th>\n",
       "      <th>Coordinates</th>\n",
       "      <th>Parent mountain</th>\n",
       "      <th>First ascent</th>\n",
       "      <th>Ascents bef. 2004</th>\n",
       "      <th>Failed attempts bef. 2004</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mountain</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Mount Everest / Sagarmatha / Chomolungma</th>\n",
       "      <td>8848</td>\n",
       "      <td>Mahalangur Himalaya</td>\n",
       "      <td>27°59′17″N 86°55′31″E﻿</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1953</td>\n",
       "      <td>&gt;&gt;145</td>\n",
       "      <td>121.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Lhotse</th>\n",
       "      <td>8516</td>\n",
       "      <td>Mahalangur Himalaya</td>\n",
       "      <td>27°57′42″N 86°55′59″E﻿</td>\n",
       "      <td>Mount Everest</td>\n",
       "      <td>1956</td>\n",
       "      <td>26</td>\n",
       "      <td>26.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Makalu</th>\n",
       "      <td>8485</td>\n",
       "      <td>Mahalangur Himalaya</td>\n",
       "      <td>27°53′23″N 87°05′20″E﻿</td>\n",
       "      <td>Mount Everest</td>\n",
       "      <td>1955</td>\n",
       "      <td>45</td>\n",
       "      <td>52.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Cho Oyu</th>\n",
       "      <td>8188</td>\n",
       "      <td>Mahalangur Himalaya</td>\n",
       "      <td>28°05′39″N 86°39′39″E﻿</td>\n",
       "      <td>Mount Everest</td>\n",
       "      <td>1954</td>\n",
       "      <td>79</td>\n",
       "      <td>28.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                          Height (m)                Range  \\\n",
       "Mountain                                                                    \n",
       "Mount Everest / Sagarmatha / Chomolungma        8848  Mahalangur Himalaya   \n",
       "Lhotse                                          8516  Mahalangur Himalaya   \n",
       "Makalu                                          8485  Mahalangur Himalaya   \n",
       "Cho Oyu                                         8188  Mahalangur Himalaya   \n",
       "\n",
       "                                                      Coordinates  \\\n",
       "Mountain                                                            \n",
       "Mount Everest / Sagarmatha / Chomolungma  27°59′17″N 86°55′31″E﻿    \n",
       "Lhotse                                    27°57′42″N 86°55′59″E﻿    \n",
       "Makalu                                    27°53′23″N 87°05′20″E﻿    \n",
       "Cho Oyu                                   28°05′39″N 86°39′39″E﻿    \n",
       "\n",
       "                                         Parent mountain  First ascent  \\\n",
       "Mountain                                                                 \n",
       "Mount Everest / Sagarmatha / Chomolungma             NaN          1953   \n",
       "Lhotse                                     Mount Everest          1956   \n",
       "Makalu                                     Mount Everest          1955   \n",
       "Cho Oyu                                    Mount Everest          1954   \n",
       "\n",
       "                                         Ascents bef. 2004  \\\n",
       "Mountain                                                     \n",
       "Mount Everest / Sagarmatha / Chomolungma            >>145    \n",
       "Lhotse                                                  26   \n",
       "Makalu                                                  45   \n",
       "Cho Oyu                                                 79   \n",
       "\n",
       "                                          Failed attempts bef. 2004  \n",
       "Mountain                                                             \n",
       "Mount Everest / Sagarmatha / Chomolungma                      121.0  \n",
       "Lhotse                                                         26.0  \n",
       "Makalu                                                         52.0  \n",
       "Cho Oyu                                                        28.0  "
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[(df['Height (m)'] > 8000) & (df['Range']=='Mahalangur Himalaya')]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Boolean selection of rows and columns using the `.loc` operator"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "As mentioned before we can also use the `.loc` operator to perform boolean selection. For example if we wanted to replicate the results from our last command, we would just pass the combined boolean selection to the `loc` operator and also mention that we want all the columns to be returned. Here is the equivalent command"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Height (m)</th>\n",
       "      <th>Range</th>\n",
       "      <th>Coordinates</th>\n",
       "      <th>Parent mountain</th>\n",
       "      <th>First ascent</th>\n",
       "      <th>Ascents bef. 2004</th>\n",
       "      <th>Failed attempts bef. 2004</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mountain</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Mount Everest / Sagarmatha / Chomolungma</th>\n",
       "      <td>8848</td>\n",
       "      <td>Mahalangur Himalaya</td>\n",
       "      <td>27°59′17″N 86°55′31″E﻿</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1953</td>\n",
       "      <td>&gt;&gt;145</td>\n",
       "      <td>121.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Lhotse</th>\n",
       "      <td>8516</td>\n",
       "      <td>Mahalangur Himalaya</td>\n",
       "      <td>27°57′42″N 86°55′59″E﻿</td>\n",
       "      <td>Mount Everest</td>\n",
       "      <td>1956</td>\n",
       "      <td>26</td>\n",
       "      <td>26.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Makalu</th>\n",
       "      <td>8485</td>\n",
       "      <td>Mahalangur Himalaya</td>\n",
       "      <td>27°53′23″N 87°05′20″E﻿</td>\n",
       "      <td>Mount Everest</td>\n",
       "      <td>1955</td>\n",
       "      <td>45</td>\n",
       "      <td>52.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Cho Oyu</th>\n",
       "      <td>8188</td>\n",
       "      <td>Mahalangur Himalaya</td>\n",
       "      <td>28°05′39″N 86°39′39″E﻿</td>\n",
       "      <td>Mount Everest</td>\n",
       "      <td>1954</td>\n",
       "      <td>79</td>\n",
       "      <td>28.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                          Height (m)                Range  \\\n",
       "Mountain                                                                    \n",
       "Mount Everest / Sagarmatha / Chomolungma        8848  Mahalangur Himalaya   \n",
       "Lhotse                                          8516  Mahalangur Himalaya   \n",
       "Makalu                                          8485  Mahalangur Himalaya   \n",
       "Cho Oyu                                         8188  Mahalangur Himalaya   \n",
       "\n",
       "                                                      Coordinates  \\\n",
       "Mountain                                                            \n",
       "Mount Everest / Sagarmatha / Chomolungma  27°59′17″N 86°55′31″E﻿    \n",
       "Lhotse                                    27°57′42″N 86°55′59″E﻿    \n",
       "Makalu                                    27°53′23″N 87°05′20″E﻿    \n",
       "Cho Oyu                                   28°05′39″N 86°39′39″E﻿    \n",
       "\n",
       "                                         Parent mountain  First ascent  \\\n",
       "Mountain                                                                 \n",
       "Mount Everest / Sagarmatha / Chomolungma             NaN          1953   \n",
       "Lhotse                                     Mount Everest          1956   \n",
       "Makalu                                     Mount Everest          1955   \n",
       "Cho Oyu                                    Mount Everest          1954   \n",
       "\n",
       "                                         Ascents bef. 2004  \\\n",
       "Mountain                                                     \n",
       "Mount Everest / Sagarmatha / Chomolungma            >>145    \n",
       "Lhotse                                                  26   \n",
       "Makalu                                                  45   \n",
       "Cho Oyu                                                 79   \n",
       "\n",
       "                                          Failed attempts bef. 2004  \n",
       "Mountain                                                             \n",
       "Mount Everest / Sagarmatha / Chomolungma                      121.0  \n",
       "Lhotse                                                         26.0  \n",
       "Makalu                                                         52.0  \n",
       "Cho Oyu                                                        28.0  "
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.loc[(df['Height (m)'] > 8000) & (df['Range']=='Mahalangur Himalaya'), :]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "So when used with the `:` symbol for column selection, the `.loc` operator is equivalent to the `[]` operator for boolean selection of rows. However the advantage of `.loc` is that we can change the `:` symbol to any other selection of the columns that we want. For example in our selection above suppose we now only want the first two columns to be returned. We can achieve this as follows \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Height (m)</th>\n",
       "      <th>Range</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mountain</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Mount Everest / Sagarmatha / Chomolungma</th>\n",
       "      <td>8848</td>\n",
       "      <td>Mahalangur Himalaya</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Lhotse</th>\n",
       "      <td>8516</td>\n",
       "      <td>Mahalangur Himalaya</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Makalu</th>\n",
       "      <td>8485</td>\n",
       "      <td>Mahalangur Himalaya</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Cho Oyu</th>\n",
       "      <td>8188</td>\n",
       "      <td>Mahalangur Himalaya</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                          Height (m)                Range\n",
       "Mountain                                                                 \n",
       "Mount Everest / Sagarmatha / Chomolungma        8848  Mahalangur Himalaya\n",
       "Lhotse                                          8516  Mahalangur Himalaya\n",
       "Makalu                                          8485  Mahalangur Himalaya\n",
       "Cho Oyu                                         8188  Mahalangur Himalaya"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.loc[(df['Height (m)'] > 8000) & (df['Range']=='Mahalangur Himalaya'), 'Height (m)':'Range']"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In fact, we can even include a boolean selection for the columns as well. Here is an example"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Height (m)</th>\n",
       "      <th>First ascent</th>\n",
       "      <th>Ascents bef. 2004</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mountain</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Mount Everest / Sagarmatha / Chomolungma</th>\n",
       "      <td>8848</td>\n",
       "      <td>1953</td>\n",
       "      <td>&gt;&gt;145</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>K2 / Qogir / Godwin Austen</th>\n",
       "      <td>8611</td>\n",
       "      <td>1954</td>\n",
       "      <td>45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Kangchenjunga</th>\n",
       "      <td>8586</td>\n",
       "      <td>1955</td>\n",
       "      <td>38</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Lhotse</th>\n",
       "      <td>8516</td>\n",
       "      <td>1956</td>\n",
       "      <td>26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Makalu</th>\n",
       "      <td>8485</td>\n",
       "      <td>1955</td>\n",
       "      <td>45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Cho Oyu</th>\n",
       "      <td>8188</td>\n",
       "      <td>1954</td>\n",
       "      <td>79</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Dhaulagiri I</th>\n",
       "      <td>8167</td>\n",
       "      <td>1960</td>\n",
       "      <td>51</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Manaslu</th>\n",
       "      <td>8163</td>\n",
       "      <td>1956</td>\n",
       "      <td>49</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Nanga Parbat</th>\n",
       "      <td>8126</td>\n",
       "      <td>1953</td>\n",
       "      <td>52</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Annapurna I</th>\n",
       "      <td>8091</td>\n",
       "      <td>1950</td>\n",
       "      <td>36</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                          Height (m)  First ascent  \\\n",
       "Mountain                                                             \n",
       "Mount Everest / Sagarmatha / Chomolungma        8848          1953   \n",
       "K2 / Qogir / Godwin Austen                      8611          1954   \n",
       "Kangchenjunga                                   8586          1955   \n",
       "Lhotse                                          8516          1956   \n",
       "Makalu                                          8485          1955   \n",
       "Cho Oyu                                         8188          1954   \n",
       "Dhaulagiri I                                    8167          1960   \n",
       "Manaslu                                         8163          1956   \n",
       "Nanga Parbat                                    8126          1953   \n",
       "Annapurna I                                     8091          1950   \n",
       "\n",
       "                                         Ascents bef. 2004  \n",
       "Mountain                                                    \n",
       "Mount Everest / Sagarmatha / Chomolungma            >>145   \n",
       "K2 / Qogir / Godwin Austen                              45  \n",
       "Kangchenjunga                                           38  \n",
       "Lhotse                                                  26  \n",
       "Makalu                                                  45  \n",
       "Cho Oyu                                                 79  \n",
       "Dhaulagiri I                                            51  \n",
       "Manaslu                                                 49  \n",
       "Nanga Parbat                                            52  \n",
       "Annapurna I                                             36  "
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "col_criteria = [True, False, False, False, True, True, False]\n",
    "df.loc[df['Height (m)'] > 8000, col_criteria] "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}

    http_version: 
  recorded_at: Fri, 10 Jan 2020 13:19:10 GMT
recorded_with: VCR 5.0.0
